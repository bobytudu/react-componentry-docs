"use strict";(self.webpackChunkreact_componentry_docs=self.webpackChunkreact_componentry_docs||[]).push([[273],{8286:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>d});var r=o(5893),n=o(1151);const l={},s="AutoComplete",i={id:"forms/AutoComplete",title:"AutoComplete",description:"Customized AutoComplete component from @mui/material/AutoComplete",source:"@site/docs/forms/AutoComplete.md",sourceDirName:"forms",slug:"/forms/AutoComplete",permalink:"/react-componentry-docs/docs/forms/AutoComplete",draft:!1,unlisted:!1,editUrl:"https://github.com/bobytudu/react-componentry/tree/main/packages/create-docusaurus/templates/shared/docs/forms/AutoComplete.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Forms",permalink:"/react-componentry-docs/docs/category/forms"},next:{title:"DatePicker",permalink:"/react-componentry-docs/docs/forms/DatePicker"}},c={},d=[{value:"Props",id:"props",level:3},{value:"Usage",id:"usage",level:3}];function a(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,n.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"autocomplete",children:"AutoComplete"}),"\n",(0,r.jsxs)(t.blockquote,{children:["\n",(0,r.jsxs)(t.p,{children:["Customized AutoComplete component from ",(0,r.jsx)(t.a,{href:"https://mui.com/material-ui/react-autocomplete/",children:"@mui/material/AutoComplete"})]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"props",children:"Props"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"options"})," - (required) Array of options for the select"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"label"})," - (required) Label for the select"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"control"})," - (required) Control from react-hook-form"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"name"})," - (required) Name of the select"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"sx"})," - (not required) sx props from @mui/material"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"fullWidth"})," - (not required) if true then select will be full width"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"loading"})," - (not required) if true then loading will be shown"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"multiple"})," - (not required) if true then select will be multiple"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"disableCloseOnSelect"})," - (not required) if true then select will not close on select"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"optionLabel"})," - (not required) if provided then it will be used to display the label of the option"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"renderOption"})," - (not required) if provided then it will be used to render the option"]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:"import { AutoComplete } from 'react-componentry';\r\nimport { Control } from 'react-hook-form';\r\n\r\nconst App = () => {\r\n    const { control } = useForm();\r\n    return (\r\n        <AutoComplete\r\n            control={control}\r\n            name=\"name\"\r\n            label=\"Name\"\r\n            options={[\r\n                { value: '1', label: 'One' },\r\n                { value: '2', label: 'Two' },\r\n                { value: '3', label: 'Three' },\r\n            ]}\r\n        />\r\n    );\r\n};\n"})})]})}function u(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},1151:(e,t,o)=>{o.d(t,{Z:()=>i,a:()=>s});var r=o(7294);const n={},l=r.createContext(n);function s(e){const t=r.useContext(l);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),r.createElement(l.Provider,{value:t},e.children)}}}]);