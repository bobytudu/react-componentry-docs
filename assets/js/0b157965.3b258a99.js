"use strict";(self.webpackChunkreact_componentry_docs=self.webpackChunkreact_componentry_docs||[]).push([[101],{4593:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>a});var r=t(5893),o=t(1151);const s={},i="Input",l={id:"forms/Input",title:"Input",description:"made with @mui/material/TextField, also inherits all the props of the @mui/material/TextField element.",source:"@site/docs/forms/Input.md",sourceDirName:"forms",slug:"/forms/Input",permalink:"/react-componentry-docs/docs/forms/Input",draft:!1,unlisted:!1,editUrl:"https://github.com/bobytudu/react-componentry/tree/main/packages/create-docusaurus/templates/shared/docs/forms/Input.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"DatePicker",permalink:"/react-componentry-docs/docs/forms/DatePicker"},next:{title:"Select",permalink:"/react-componentry-docs/docs/forms/Select"}},c={},a=[{value:"Props",id:"props",level:3},{value:"Usage",id:"usage",level:3}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"input",children:"Input"}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["made with @mui/material/TextField, also inherits all the props of the ",(0,r.jsx)(n.a,{href:"https://mui.com/material-ui/react-text-field/",children:"@mui/material/TextField"})," element."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"props",children:"Props"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"label"})," - (required) Label for the input"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"name"})," - (required) Name of the input"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"type"})," - (not required) Type of the input"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"rows"})," - (not required) required if multiline is true;"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"multiline"})," - (not required) if true then input will be multiline"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"disabled"})," - (not required) if true then input will be disabled"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"placeholder"})," - (not required) placeholder for the input"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'import { Input } from \'react-components\'\r\nimport { Control } from \'react-hook-form\'\r\n\r\nconst App = () => {\r\n    const { control } = useForm()\r\n    return (\r\n        <Input\r\n            control={control}\r\n            name="name"\r\n            label="Name"\r\n            type="text"\r\n            placeholder="Enter your name"\r\n        />\r\n    )\r\n}\n'})})]})}function u(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>i});var r=t(7294);const o={},s=r.createContext(o);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);